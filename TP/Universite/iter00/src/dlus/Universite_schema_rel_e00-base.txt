/*
-- =========================================================================== A
Produit : CoFELI.Exemple.Universite/2023
Composant : schema_rel_e00-base.txt
Responsable : Luc.LAVOIE@USherbrooke.ca
Version : 0.1.b (2023-01-24)
Statut : travail en cours
Encodage : UTF-8, sans BOM; fin de ligne simple (LF)
Plateformes : S. O.
-- =========================================================================== A
*/

/*
-- =========================================================================== B
== But

Illustrer la construction d‚Äôun sch√©ma relationnel simple selon les r√®gles de l‚Äôart.

== Probl√®me

Mod√©lisation des entit√©s utiles √† la gestion des inscriptions √©tudiantes universitaires.

== √âtape 00

Premi√®re √©bauche du sch√©ma sur la base des entit√©s recens√©es, des d√©pendances
fonctionnelles et du dictionnaire de donn√©es.

-- =========================================================================== B
*/

--
-- TYPES
--
type Bureau = ...
type CDC = ...
type EtiquetteDeGroupe = ...
type MatriculeE = ...
type MatriculeP = ...
type NoGroupe = ...
type Nom = ...
type Note = ...
type Sigle = ...
type Titre = ...
type Trimestre = ...

--
-- RELATIONS
--
var √âtudiant {matriculeE : MatriculeE, nom : Nom, ddn : Date}
  pred ¬´ L‚Äô√©tudiant identifi√© par le matricule "matriculeE" a pour nom "nom" et est n√© le "ddn". ¬ª
  df matriculeE -> nom
  df matriculeE -> ddn
  cle {matriculeE}

var Professeur {matriculeP : Matricule, nom : Nom, bureau : Bureau}
  df matriculeP -> nom
  df matriculeP -> bureau
  cle {matriculeP}
  ref {matriculeP} -> Professeur

var Cours {sigle : Sigle, titre : Titre, cr√©dit: CDC}
  df sigle -> titre
  df sigle -> cr√©dit
  cle {sigle}

var Groupe {sigle : Sigle, trimestre : Trimestre, noGroupe : NoGroupe, matriculeP : MatriculeP}

Ceci est l'usage UdeS :
  df sigle, trimestre, noGroupe -> matriculeP
  cle {sigle, trimestre, noGroupe}
  ref {sigle} -> Cours
  ref {matriculeP} -> Professeur

Ceci est plus g√©n√©ral :
  df noGroupe -> matriculeP, sigle, trimestre
  cle {noGroupe}
  ref {sigle} -> Cours
  ref {matriculeP} -> Professeur

On peut ajouter une √©tiquette de groupe ainsi :
var Groupe_Etiquette {noGroupe : NoGroupe, √©tiquette : EtiquetteDeGroupe}
contrainte
  #(Groupe ‚ãà Groupe_Etiquette ùùÖ {sigle, trimestre, etiquette}) =
  #(Groupe ùùÖ {noGroupe})

fun unique(R,G) == #R = #G ;

var Inscription {matriculeE : MatriculeE, sigle : Sigle, trimestre : Trimestre, noGroupe : NoGroupe, note : Note)
  df sigle, trimestre, noGroupe, matriculeE -> note
  cle {matriculeE, sigle, trimestre, noGroupe}
  ref {sigle, trimestre, noGroupe} -> Groupe

var Pr√©alable {sigle, siglePr√©alable}
  cle {sigle, siglePr√©alable}
  ref {sigle} -> Cours
  ref {siglePr√©alable -> sigle} -> Cours

var Offre {sigle : Sigle, trimestre : Trimestre}
  cle {sigle, trimestre}
  ref {sigle} -> Cours

var Comp√©tence {sigle : Sigle, matriculeP : MatriculeP}
  cle {sigle, matriculeP}
  ref {sigle} -> Cours
  ref {matriculeP} -> Professeur

var Disponibilit√© {sigle : Sigle, matriculeP : MatriculeP}
  cle {sigle, matriculeP}
  ref {sigle} -> Cours
  ref {matriculeP} -> Professeur

/*
-- =========================================================================== Y
== Questions
  * Pourquoi noGroupe n‚Äôest-il pas un d√©terminant unique (contrairement √† matriculeP) ?
  * Que faire si un groupe peut se voir attribuer plus d‚Äôun professeur ?
  * Compl√©ter
    ** les pr√©dicats ;
    ** les types.
-- =========================================================================== Y
*/

/*
-- =========================================================================== Z
== Contributeurs
  (CK) Christina.KHNAISSER@USherbrooke.ca,
  (LL) Luc.LAVOIE@USherbrooke.ca

== Adresse, droits d‚Äôauteur et copyright
  Groupe Œú·øÜœÑŒπœÇ (M√©tis)
  D√©partement d‚Äôinformatique
  Facult√© des sciences
  Universit√© de Sherbrooke
  Sherbrooke (Qu√©bec)  J1K 2R1
  Canada
  http://info.usherbrooke.ca/llavoie/
  [CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0)]

== T√¢ches projet√©es
TODO 2021-02-18 (LL) : R√©aliser les √©tapes subs√©quentes
  * e01 : prise en compte de l‚Äôabsence potentielle de certaines valeurs.
    ** Illustration du traitement de l‚Äôannulabilit√© :
       *** cas non applicable (note lors de l‚Äôinscription) ;
       *** cas non disponible (bureau du professeur) ;
       *** par DPJ ;
       *** par DRU.
  * e02 : traitement explicite de l‚Äôoffre de cours (programm√©e et effective).
    ** Illustration du traitement de la 5FN.
  * e03 : d√©finition des types √† partir du dictionnaire de donn√©es.
    ** Illustration du bon usage des contraintes de type.
  * e04 : affinement des types Cause (d‚Äôabsence), Sigle (de cours)  et Trimestre
    ** Illustration des tables de code.
    ** Illustration des dangers des attributs composites, en particulier en regard des cl√©s.
  * e05 : affinement du concept de trimestre.
    ** Illustration de l‚Äôexplicitation des attributs afin d‚Äô√©viter les ¬´ constantes cach√©es ¬ª.
  * e06 : division en sch√©mas.
    ** Gestion de la complexit√© et du couplage par la visibilit√©.
    ** Gestion de l‚Äôint√©grit√© et de la s√©curit√© par le contr√¥le d‚Äôacc√®s.

== T√¢ches r√©alis√©es
2021-02-18 (LL) : R√©alisation de l‚Äô√©tape e00.
  * Prise en compte des entit√©s de base √âtudiant, Professeur, Cours, Groupe...
    ** Illustration de la construction par entit√© et d√©pendances fonctionnelles.
2021-02-15 (LL) : Cr√©ation initiale inspir√©e de l‚Äôexemple d√©velopp√© en 2014.

== R√©f√©rences
[ddv] http://info.usherbrooke.ca/llavoie/enseignement/Exemples/Universite/
      Universite_DDV.pdf
[std] http://info.usherbrooke.ca/llavoie/enseignement/Modules/
      BD190-STD-SQL-01_NDC.pdf
-- =========================================================================== Z
*/
